{"version":3,"sources":["axiosDefaults.js","components/PlayerData.jsx","playerIDS.js","views/PlayerProfile.jsx"],"names":["instance","axios","create","baseURL","defaults","headers","common","PlayerData","id","React","useState","playerData","setData","secondData","setSecondData","console","log","fetchLiorData","a","get","request","data","fetchPlayerData","useEffect","then","lifetime","Matches","games","csgo","faceit_elo","skill_level","IDS","liorID","ayraID","heziID","lavanID","itayID","arielID","PlayerProfile","playerName","useParams","name","slice","toUpperCase","substring"],"mappings":"kMAEMA,E,OAAWC,EAAMC,OAAO,CAC5BC,QAAS,qCAEXH,EAASI,SAASC,QAAQC,OAA1B,cACE,8CAEaN,QCwCAO,EA7CI,SAACC,GAAQ,IAAD,EACGC,IAAMC,SAAS,MADlB,mBACpBC,EADoB,KACRC,EADQ,OAESH,IAAMC,SAAS,MAFxB,mBAEpBG,EAFoB,KAERC,EAFQ,KAGzBC,QAAQC,IAAIR,GAEZ,IAAMS,EAAa,uCAAG,4BAAAC,EAAA,sEACElB,EAASmB,IAAT,mBAAyBX,EAAGA,GAA5B,gBADF,cACdY,EADc,OAEpBL,QAAQC,IAAII,EAAQC,MAFA,kBAIbD,EAAQC,MAJK,2CAAH,qDAObC,EAAe,uCAAG,4BAAAJ,EAAA,sEACAlB,EAASmB,IAAT,kBAAwBX,EAAGA,KAD3B,cAChBY,EADgB,OAEtBL,QAAQC,IAAII,EAAQC,MAFE,kBAGfD,EAAQC,MAHO,2CAAH,qDAerB,OATAZ,IAAMc,WAAU,WACdN,IAAgBO,MAAK,SAACH,GACpBT,EAAQS,MAEVC,IAAkBE,MAAK,SAACH,GACtBP,EAAcO,QAEf,CAACb,IAEkB,MAAdG,GAAoC,MAAdE,EAC5B,UAEA,6BACE,qDAC0BF,EAAWc,SAAS,uBAD9C,KAGA,iDAAuBd,EAAWc,SAAS,sBAC3C,kDAAwBd,EAAWc,SAAS,uBAC5C,uCAAad,EAAWc,SAAS,cAAjC,KACA,8CAAoBd,EAAWc,SAASC,SACxC,mCAASb,EAAWc,MAAMC,KAAKC,YAC/B,qCAAWhB,EAAWc,MAAMC,KAAKE,eCjCxBC,EATH,CACVC,OAAQ,uCACRC,OAAQ,uCACRC,OAAQ,uCACRC,QAAS,uCACTC,OAAQ,uCACRC,QAAS,wCCsCIC,UAvCO,WACpB,IACI9B,EADE+B,EAAaC,cAGnB,OAAQD,EAAWE,MACjB,IAAK,OACHjC,EAAKuB,EAAIC,OACT,MACF,IAAK,OACHxB,EAAKuB,EAAIK,OACT,MACF,IAAK,OACH5B,EAAKuB,EAAIG,OACT,MACF,IAAK,OACH1B,EAAKuB,EAAIE,OACT,MACF,IAAK,QACHzB,EAAKuB,EAAII,QACT,MACF,IAAK,QACH3B,EAAKuB,EAAIM,QACT,MACF,QACE7B,EAAKuB,EAAIC,OAIb,OACE,6BACE,4BACGO,EAAWE,KAAKC,MAAM,EAAG,GAAGC,cAC3BJ,EAAWE,KAAKG,UAAU,IAE9B,kBAAC,EAAD,CAAYpC,GAAIA","file":"static/js/4.8a94ab0d.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://open.faceit.com/data/v4/\",\n});\ninstance.defaults.headers.common[\"Authorization\"] =\n  \"Bearer 3392a4a0-da4f-45bd-90ed-10d9e8918a15\";\n\nexport default instance;\n","import React from \"react\";\nimport instance from \"../axiosDefaults\";\n\nconst PlayerData = (id) => {\n  let [playerData, setData] = React.useState(null);\n  let [secondData, setSecondData] = React.useState(null);\n  console.log(id);\n\n  const fetchLiorData = async () => {\n    const request = await instance.get(`/players/${id.id}/stats/csgo`);\n    console.log(request.data);\n\n    return request.data;\n  };\n\n  const fetchPlayerData = async () => {\n    const request = await instance.get(`players/${id.id}`);\n    console.log(request.data);\n    return request.data;\n  };\n\n  React.useEffect(() => {\n    fetchLiorData().then((data) => {\n      setData(data);\n    });\n    fetchPlayerData().then((data) => {\n      setSecondData(data);\n    });\n  }, [id]);\n\n  return (playerData == null || secondData == null) ? (\n    \"Loading\"\n  ) : (\n    <div>\n      <p>\n        Average HS percentage: {playerData.lifetime[\"Average Headshots %\"]}%\n      </p>\n      <p>Average K/D Ratio: {playerData.lifetime[\"Average K/D Ratio\"]}</p>\n      <p>Current Win Streak: {playerData.lifetime[\"Current Win Streak\"]}</p>\n      <p>Winrate: {playerData.lifetime[\"Win Rate %\"]}%</p>\n      <p>Matches played: {playerData.lifetime.Matches}</p>\n      <p>Elo: {secondData.games.csgo.faceit_elo}</p>\n      <p>Level: {secondData.games.csgo.skill_level}</p>\n\n    </div>\n  );\n};\n\nexport default PlayerData;\n","const IDS = {\n  liorID: \"cd8a3937-a6b5-4972-8d0b-42c790ff3132\",\n  ayraID: \"eb07ae0a-87c1-44c6-b348-ca18d5869ea4\",\n  heziID: \"44f43251-739e-4c98-b2f9-dae3e0d42f9b\",\n  lavanID: \"5153d825-9e29-408f-a772-d13375c78bc5\",\n  itayID: \"c4d82eac-dd80-4151-bac8-4580904cdcdb\",\n  arielID: \"a2b3c0b6-4124-4a44-b84d-0bf6fc36a749\"\n};\n\nexport default IDS;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport PlayerData from \"../components/PlayerData\";\nimport IDS from \"../playerIDS\";\n\nconst PlayerProfile = () => {\n  const playerName = useParams();\n  let id;\n\n  switch (playerName.name) {\n    case \"lior\":\n      id = IDS.liorID;\n      break;\n    case \"itay\":\n      id = IDS.itayID;\n      break;\n    case \"hezi\":\n      id = IDS.heziID;\n      break;\n    case \"ayra\":\n      id = IDS.ayraID;\n      break;\n    case \"lavan\":\n      id = IDS.lavanID;\n      break;\n    case \"ariel\":\n      id = IDS.arielID;\n      break;\n    default:\n      id = IDS.liorID;\n      break;\n  }\n\n  return (\n    <div>\n      <h1>\n        {playerName.name.slice(0, 1).toUpperCase() +\n          playerName.name.substring(1)}\n      </h1>\n      <PlayerData id={id} />\n    </div>\n  );\n};\n\nexport default PlayerProfile;\n"],"sourceRoot":""}